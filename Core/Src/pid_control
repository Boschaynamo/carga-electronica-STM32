/**
  ******************************************************************************
  * @file           : main.c
  * @brief          : Main program body
  ******************************************************************************
  * @attention
  *
  ******************************************************************************
*/

/* Private includes ----------------------------------------------------------*/
#include "string.h"
#include "main.h"

/* Private typedef -----------------------------------------------------------*/

/* Private define ------------------------------------------------------------*/
#define PID_A 0.05
#define PID_B 0.00001
#define PID_C 0.1
#define PID_MAX 2000
#define PID_MIN -2000
#define PID_SETPOINT 0.0

/* Private macro -------------------------------------------------------------*/

/* Private variable ----------------------------------------------------------*/
/* Constantes PID Horizontal*/
float a,b,c;                       		//constantes del PID voltaje
float rT,eT,iT,dT,yT,yT0,uT,iT0,eT0;   	//variables de ecuaciones de PID voltaje
float pid_max,pid_min;             		//límites máximo y mínimo de control.

pid_min = PID_MIN;
pid_max = PID_MAX;
iT0=0.0;
eT0=0.0;

rT=PID_SETPOINT;

a= PID_A;
b= PID_B;
c= PID_C;

/* Private functions ---------------------------------------------------------*/
void PID_voltage (float voltage){

	yT = //Señal de corriente

	eT=rT-yT;                 //Cálculo error corriente

	iT=b*(eT+eT0)+iT0;      //Cálculo del término integral corriente

	/*Limite termino integral corriente*/
	if (iT>pid_max) iT=pid_max;            //Salida integral si es mayor que el MAX
	else if (iT<pid_min) iT=pid_min;       //Salida integral si es menor que el MIN


	dT=-c*(yT-yT0);			 //Cálculo del término derivativo corriente
	uT=iT+a*eT+dT;            //Cálculo de la salida PID corriente

	/*Limite PID corriente*/
	if (uT>pid_max) uT=pid_max;           //Salida PID si es mayor que el MAX
	else if (uT<pid_min) uT=pid_min;      //Salida PID si es menor que el MIN

	/* Guardar variables */
	iT0=iT;
	eT0=eT;
	yT0=yT;
	
}
